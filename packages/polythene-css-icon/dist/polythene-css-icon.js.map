{"version":3,"file":"polythene-css-icon.js","sources":["../../polythene-css-classes/icon.js","../src/color.js","../src/layout.js","../src/vars.js","../src/index.js"],"sourcesContent":["\nexport default {\n  component: \"pe-icon\",\n\n  // states\n  avatar:    \"pe-icon--avatar\",\n  large:     \"pe-icon--large\",\n  medium:    \"pe-icon--medium\",\n  regular:   \"pe-icon--regular\",\n  small:     \"pe-icon--small\",\n};\n","// @ts-check\n\nimport { sel, createColor } from \"polythene-core-css\";\n\nconst generalFns = ({\n  general_styles: selector => [\n    sel(selector, {\n      color: \"currentColor\",\n    })\n  ],\n});\n\nconst tintFns = tint => ({\n  [\"color_\" + tint]: (selector, vars) => [\n    sel(selector, {\n      color: vars[\"color_\" + tint]\n    })\n  ],\n  [\"color_\" + tint + \"_avatar_background\"]: (selector, vars) => [\n    sel(selector, {\n      \".pe-icon--avatar\": {\n        backgroundColor: vars[\"color_\" + tint + \"_avatar_background\"],\n      } \n    })\n  ]\n});\n\nconst lightTintFns = Object.assign({}, generalFns, tintFns(\"light\"));\nconst darkTintFns = Object.assign({}, generalFns, tintFns(\"dark\"));\n\nexport default createColor({\n  varFns: { lightTintFns, darkTintFns }\n});\n","// @ts-check\n\nimport { sel, createLayout } from \"polythene-core-css\";\n\nconst sizeDirective = size => (selector, vars) =>\n  sel(selector, {\n    [`.pe-icon--${size}`]: {\n      width:  vars[`size_${size}`] + \"px\",\n      height: vars[`size_${size}`] + \"px\",\n    }\n  });\n\nconst varFns = Object.assign({},\n  {\n    general_styles: selector => [\n      sel(selector, {\n        display: \"inline-block\",\n        verticalAlign: \"middle\",\n        backgroundRepeat: \"no-repeat\",\n        position: \"relative\",\n        fontSize: 0,\n        lineHeight: 0,\n\n        \".pe-icon--avatar\": {\n          borderRadius: \"50%\",\n        },\n        \n        \".pe-icon--avatar img\": {\n          border: \"none\",\n          borderRadius: \"50%\",\n          width: \"inherit\",\n          height: \"inherit\"\n        },\n\n        \" img\": {\n          height: \"inherit\"\n        },\n\n        \" .pe-svg, .pe-svg > div\": { /* React creates an additional div when wrapping an SVG */\n          width: \"inherit\",\n          height: \"inherit\"\n        },\n      })\n    ],\n  },\n  [\"small\", \"regular\", \"medium\", \"large\"].reduce((acc, size) => (\n    acc[`size_${size}`] = sizeDirective(size),\n    acc\n  ), {})\n);\n\nexport default createLayout({ varFns });\n","// @ts-check\n\n/**\n * @typedef {import(\"../index\").IconVars} IconVars\n */\n\nimport { rgba } from \"polythene-core-css\";\nimport { vars } from \"polythene-theme\";\n\n/**\n * @type {IconVars} iconVars\n */\nconst iconVars = {\n  /**\n   * Generate general styles, not defined by variables\n   */\n  general_styles:                true,\n\n  size_small:                    vars.unit_icon_size_small,  // 16 \n  size_regular:                  vars.unit_icon_size,        // 24\n  size_medium:                   vars.unit_icon_size_medium, // 32\n  size_large:                    vars.unit_icon_size_large,  // 40\n\n  // avatar background is visible when image is not yet loaded\n  color_light_avatar_background: rgba(vars.color_light_foreground, vars.blend_light_background_disabled),\n  color_dark_avatar_background:  rgba(vars.color_dark_foreground, vars.blend_dark_background_disabled),\n\n  color_light:                   \"currentcolor\",\n  color_dark:                    \"currentcolor\"\n};\n\nexport default iconVars;","// @ts-check\n\nimport classes from \"polythene-css-classes/icon\";\nimport color from \"./color\";\nimport layout from \"./layout\";\nimport vars from \"./vars\";\nimport { styler } from \"polythene-core-css\";\n\nconst fns = [layout, color];\nconst selector = `.${classes.component}`;\n\nconst addStyle = styler.createAddStyle(selector, fns, vars);\n\nconst getStyle = styler.createGetStyle(selector, fns, vars);\n\nstyler.addStyle({\n  selectors: [selector],\n  fns,\n  vars\n});\n\nexport {\n  addStyle,\n  getStyle,\n  color,\n  layout,\n  vars,\n};\n"],"names":["component","avatar","large","medium","regular","small","generalFns","general_styles","selector","sel","color","tintFns","tint","vars","backgroundColor","lightTintFns","darkTintFns","createColor","varFns","sizeDirective","size","width","height","display","verticalAlign","backgroundRepeat","position","fontSize","lineHeight","borderRadius","border","reduce","acc","createLayout","iconVars","size_small","unit_icon_size_small","size_regular","unit_icon_size","size_medium","unit_icon_size_medium","size_large","unit_icon_size_large","color_light_avatar_background","rgba","color_light_foreground","blend_light_background_disabled","color_dark_avatar_background","color_dark_foreground","blend_dark_background_disabled","color_light","color_dark","fns","layout","classes","addStyle","styler","createAddStyle","getStyle","createGetStyle","selectors"],"mappings":"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"}