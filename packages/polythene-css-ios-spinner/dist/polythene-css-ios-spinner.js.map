{"version":3,"file":"polythene-css-ios-spinner.js","sources":["../../polythene-css-classes/ios-spinner.js","../src/color.js","../src/layout.js","../src/vars.js","../src/index.js"],"sourcesContent":["\nexport default {\n  component: \"pe-ios-spinner\",\n\n  // elements\n  blades:    \"pe-ios-spinner__blades\",\n  blade:     \"pe-ios-spinner__blade\",\n};\n","// @ts-check\n\nimport { color as superColor } from \"polythene-css-base-spinner\";\nimport { sel, createColor } from \"polythene-core-css\";\n\nconst generalFns = ({\n  general_styles: selector => [\n    sel(selector, {\n      \" .pe-ios-spinner__blade\": {\n        background: \"currentcolor\"\n      }\n    })\n  ],\n});\n\nconst tintFns = tint => ({\n  [\"color_\" + tint]: (selector, vars) => [\n    sel(selector, {\n      color: vars[\"color_\" + tint],\n    })\n  ]\n});\n\nconst lightTintFns = Object.assign({}, generalFns, tintFns(\"light\"));\nconst darkTintFns = Object.assign({}, generalFns, tintFns(\"dark\"));\n\nexport default createColor({\n  varFns: { lightTintFns, darkTintFns },\n  superColor\n});\n","// @ts-check\n\nimport { layout as superLayout } from \"polythene-css-base-spinner\";\nimport { sel, createLayout } from \"polythene-core-css\";\nimport { styleDurationToMs } from \"polythene-core\";\n\nconst bladeWidth  = 9; // percent\nconst bladeHeight = 28; // percent\n\nconst kfFade = () => ({\n  \" 0%\": {\n    opacity: .640\n  },\n  \" 100%\": {\n    opacity: .035\n  }\n});\n\nconst positionBlades = vars => \n  [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11].map(i => {\n    // reverse to improve performance on iOS\n    const delay = -1 / 12 * i * styleDurationToMs(vars.rotation_animation_duration);\n    const rotation = 360 - (360 / 12 * i);\n    return {\n      [\" .pe-ios-spinner__blade:nth-of-type(\" + (i + 1) + \")\"]: {\n        transform: \"rotate(\" + rotation + \"deg) translate3d(0,-140%,0)\",\n        animation: \"iosSpinnerFade \" + vars.rotation_animation_duration + \" \" + delay + \"ms linear infinite\"\n      }\n    };\n  });\n\nconst varFns = {\n  general_styles: selector => [\n    sel(selector, {\n      \" .pe-ios-spinner__blades\": {\n        transform: \"translate3d(0,0,0)\",\n        position: \"relative\",\n        width: \"100%\",\n        height: \"100%\"\n      },\n\n      \" .pe-ios-spinner__blade\": {\n        position: \"absolute\",\n        width: bladeWidth + \"%\",\n        height: bladeHeight + \"%\",\n        left: ((100 - bladeWidth) / 2) + \"%\",\n        top: ((100 - bladeHeight) / 2) + \"%\",\n        opacity: 0,\n        borderRadius: \"50px\"\n      },\n\n      \"@keyframes iosSpinnerFade\": kfFade()\n    })\n  ],\n  rotation_animation_duration: (selector, vars) => [\n    sel(selector, {\n      \" .pe-ios-spinner__blades\": [\n        positionBlades(vars),\n      ],\n    })\n  ],\n};\n\nexport default createLayout({ varFns, superLayout });\n","// @ts-check\n\n/**\n * @typedef {import(\"../index\").IOSSpinnerVars} IOSSpinnerVars\n */\n\nimport { rgba } from \"polythene-core-css\";\nimport { vars } from \"polythene-theme\";\n\n/**\n * @type {IOSSpinnerVars} iOSSpinnerVars\n */\nconst iOSSpinnerVars = {\n  /**\n   * Generate general styles, not defined by variables\n   */\n  general_styles:              true,\n\n  rotation_animation_duration: \"1s\",\n\n  color_light:                 rgba(vars.color_light_foreground),\n  color_dark:                  rgba(vars.color_dark_foreground)\n};\n\nexport default iOSSpinnerVars;\n","// @ts-check\n\nimport classes from \"polythene-css-classes/ios-spinner\";\nimport color from \"./color\";\nimport layout from \"./layout\";\nimport vars from \"./vars\";\nimport { styler } from \"polythene-core-css\";\n\nconst fns = [layout, color];\nconst selector = `.${classes.component}`;\n\nconst addStyle = styler.createAddStyle(selector, fns, vars);\n\nconst getStyle = styler.createGetStyle(selector, fns, vars);\n    \nstyler.addStyle({\n  selectors: [selector],\n  fns,\n  vars\n});\n\nexport {\n  addStyle,\n  getStyle,\n  color,\n  layout,\n  vars,\n};\n"],"names":["component","blades","blade","generalFns","general_styles","selector","sel","background","tintFns","tint","vars","color","lightTintFns","darkTintFns","createColor","varFns","superColor","bladeWidth","bladeHeight","kfFade","opacity","positionBlades","map","i","delay","styleDurationToMs","rotation_animation_duration","rotation","transform","animation","position","width","height","left","top","borderRadius","createLayout","superLayout","iOSSpinnerVars","color_light","rgba","color_light_foreground","color_dark","color_dark_foreground","fns","layout","classes","addStyle","styler","createAddStyle","getStyle","createGetStyle","selectors"],"mappings":"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"}